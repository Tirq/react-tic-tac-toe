{"version":3,"sources":["Square.js","Board.js","Game.js","Helper.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","disabled","value","Board","rows","row","cols","col","push","this","renderSquare","key","index","_this","squares","winner","winnerInfo","indexes","includes","src_Square","renderSquares","React","Component","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","xIsNext","played","stepNumber","slice","current","length","lines","i","_lines$i","slicedToArray","b","c","calculateWinner","setState","concat","step","move","Math","floor","_this2","moves","map","desc","buildLabelHistory","jumpTo","status","getGameState","src_Board","handleClick","ReactDOM","render","src_Game","document","getElementById"],"mappings":"4LAYeA,MAVf,SAAgBC,GACd,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAWJ,EAAMI,UACjBC,QAASL,EAAMK,QACfC,SAAUN,EAAMM,UACrBN,EAAMO,QCkCEC,0LAlCX,IADA,IAAIC,EAAO,GACHC,EAAM,EAAGA,EAAM,EAAIA,IAAM,CAE/B,IADA,IAAIC,EAAO,GACHC,EAAI,EAAGA,EAAM,EAAGA,IACtBD,EAAKE,KAAKC,KAAKC,aAAaH,EAAa,EAANF,IAErCD,EAAKI,KAAKZ,EAAAC,EAAAC,cAAA,OAAKa,IAAKN,EAAKN,UAAU,aAAaO,IAElD,OAAOF,uCAGIQ,GAAO,IAAAC,EAAAJ,KACZP,EAAQO,KAAKd,MAAMmB,QAAQF,GAC3BG,EAASN,KAAKd,MAAMqB,WACtBjB,EAAY,UAAaG,EAAuB,MAAVA,EAAgB,OAAS,QAA9B,IAErC,OADGa,GAAUN,KAAKd,MAAMqB,WAAWC,QAAQC,SAASN,KAAQb,GAAY,WAEtEH,EAAAC,EAAAC,cAAA,QAAMa,IAAKC,GACThB,EAAAC,EAAAC,cAACqB,EAAD,CACEpB,UAAWA,EACXG,MAAOA,EACPF,QAAS,kBAAMa,EAAKlB,MAAMK,QAAQY,IAClCX,SAAUQ,KAAKd,MAAMmB,QAAQF,IAAUG,sCAO7C,OACEnB,EAAAC,EAAAC,cAAA,WAAMW,KAAKW,wBAjCGC,IAAMC,4BCuFXC,cApFb,SAAAA,EAAY5B,GAAM,IAAAkB,EAAA,OAAAW,OAAAC,EAAA,EAAAD,CAAAf,KAAAc,IAChBV,EAAAW,OAAAE,EAAA,EAAAF,CAAAf,KAAAe,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAnB,KAAMd,KACDkC,MAAQ,CACXC,QAAS,CAAC,CACRhB,QAASiB,MAAM,GAAGC,KAAK,MACvBC,SAAS,EACTjB,WAAY,KACZkB,OAAQ,OAEVC,WAAW,GATGtB,2EAaND,GACV,IAAMkB,EAAUrB,KAAKoB,MAAMC,QAAQM,MAAM,EAAE3B,KAAKoB,MAAMM,WAAW,GAE3DE,EAAUP,EADEA,EAAQQ,OAAO,GAE3BxB,EAAUuB,EAAQvB,QAAQsB,QAChCtB,EAAQF,GAASyB,EAAQJ,QAAU,IAAM,IACzC,IAAMjB,ECzBH,SAAyBF,GAW9B,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAMD,OAAQE,IAAK,KAAAC,EAAAjB,OAAAkB,EAAA,EAAAlB,CACnBe,EAAMC,GADa,GAC9B3C,EAD8B4C,EAAA,GAC3BE,EAD2BF,EAAA,GACxBG,EADwBH,EAAA,GAErC,GAAI3B,EAAQjB,IAAMiB,EAAQjB,KAAOiB,EAAQ6B,IAAM7B,EAAQjB,KAAOiB,EAAQ8B,GACpE,MAAO,CAAC7B,OAAQD,EAAQjB,GAAIoB,QAAS,CAACpB,EAAE8C,EAAEC,IAG9C,OAAO,KDQcC,CAAgB/B,GACnCL,KAAKqC,SAAS,CACZhB,QAASA,EAAQiB,OAAO,CAAC,CACvBjC,QAASA,EACTmB,SAAUI,EAAQJ,QAClBjB,WAAYA,EACZkB,OAAQtB,KAEVuB,WAAYL,EAAQQ,wCAIjBU,GACLvC,KAAKqC,SAAS,CACZX,WAAYa,yCAIHX,EAAQF,GACnB,OAAGE,EAAQrB,WAAmB,WAAYqB,EAAQrB,WAAWD,OAC3C,IAAfoB,EAAyB,QACrB,iBAAmBE,EAAQJ,QAAU,IAAM,+CAGlCgB,EAAMf,GACtB,IAAIe,EAAM,MAAO,mBACjB,IAAI5C,EAAM6C,KAAKC,MAAMjB,EAAS,GAAG,EAC7B3B,EAAO2B,EAAS,EAAG,EACvB,sBAAAa,OAAuBE,EAAvB,UAAAF,OAAoC1C,EAApC,UAAA0C,OAAgDxC,oCAGzC,IAAA6C,EAAA3C,KACDqB,EAAUrB,KAAKoB,MAAMC,QACrBK,EAAa1B,KAAKoB,MAAMM,WACxBE,EAAUP,EAAQK,GAClBkB,EAAQvB,EAAQwB,IAAI,SAACN,EAAKC,GAC9B,IAAIM,EAAOH,EAAKI,kBAAkBP,EAAMD,EAAKd,QAC7C,OACEtC,EAAAC,EAAAC,cAAA,MAAIa,IAAKsC,GACPrD,EAAAC,EAAAC,cAAA,UACIC,UAAWqD,EAAKvB,MAAMM,aAAec,EAAO,OAAS,GACrDjD,QAAS,kBAAMoD,EAAKK,OAAOR,KAAQM,MAIzCG,EAASjD,KAAKkD,aAAatB,EAAQF,GAEvC,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC8D,EAAD,CACE9C,QAASuB,EAAQvB,QACjBE,WAAYqB,EAAQrB,WACpBhB,QAAS,SAACwC,GAAD,OAAOY,EAAKS,YAAYrB,OAGrC5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,WAAM4D,GACN9D,EAAAC,EAAAC,cAAA,UAAKuD,YA9EIhC,IAAMC,WEDzBwC,IAASC,OAASnE,EAAAC,EAAAC,cAACkE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.61c36105.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props){\n  return (\n    <button className={props.className} \n            onClick={props.onClick} \n            disabled={props.disabled}>\n      {props.value}\n    </button>\n  );\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  \n  renderSquares(){\n    let rows = [];\n    for(let row = 0; row < 3 ; row++){\n      let cols = [];\n      for(let col=0; col < 3; col++ ){\n        cols.push(this.renderSquare(col + (row * 3)));  \n      }\n      rows.push(<div key={row} className=\"board-row\">{cols}</div>);\n    }\n    return rows;\n  }\n\n  renderSquare(index) {\n    const value = this.props.squares[index];\n    const winner = this.props.winnerInfo;\n    let className = 'square' + (!value ? '' : value === 'X' ? ' red' : ' blue');\n    if(winner && this.props.winnerInfo.indexes.includes(index)) className+= ' winner';\n    return (\n      <span key={index}>\n        <Square\n          className={className}\n          value={value}\n          onClick={() => this.props.onClick(index)}\n          disabled={this.props.squares[index] || winner}  \n        />\n      </span>\n    );\n  }\n\n  render() {\n    return (\n      <div>{this.renderSquares()}</div>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board';\nimport {calculateWinner} from './Helper';\nimport './index.css';\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        xIsNext: true,\n        winnerInfo: null,\n        played: null,\n      }],\n      stepNumber:0,\n    };\n  }\n\n  handleClick(index){\n    const history = this.state.history.slice(0,this.state.stepNumber+1);\n    const lastIndex = history.length-1;\n    const current = history[lastIndex];\n    const squares = current.squares.slice();\n    squares[index] = current.xIsNext ? 'X' : 'O';\n    const winnerInfo = calculateWinner(squares);\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        xIsNext: !current.xIsNext,  \n        winnerInfo: winnerInfo,\n        played: index,\n      }]),\n      stepNumber: history.length,  \n    });\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n    });\n  }\n\n  getGameState(current,stepNumber){\n    if(current.winnerInfo) return 'Winner: '+ current.winnerInfo.winner;\n    if(stepNumber === 9) return 'Draw!';\n    return 'Next player: '+ ( current.xIsNext ? 'X' : 'O');\n  }\n\n  buildLabelHistory(move, played){\n    if(!move) return 'Go to game start';\n    let row = Math.floor(played / 3)+1;\n    let col = (played % 3)+1;\n    return `Go to move # ${move} row: ${row} col: ${col}`;\n  }\n\n  render() {\n    const history = this.state.history;\n    const stepNumber = this.state.stepNumber;\n    const current = history[stepNumber];\n    const moves = history.map((step,move) => {\n      let desc = this.buildLabelHistory(move, step.played);\n      return (\n        <li key={move}>\n          <button \n              className={this.state.stepNumber === move ? 'bold' : ''}\n              onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    let status = this.getGameState(current,stepNumber);\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            winnerInfo={current.winnerInfo}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;  ","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {winner: squares[a], indexes: [a,b,c]};\n    }\n  }\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nReactDOM.render(  <Game />,document.getElementById('root') );"],"sourceRoot":""}