{"version":3,"sources":["Square.js","Board.js","Game.js","Helper.js","index.js"],"names":["Square","props","react_default","a","createElement","className","onClick","disabled","value","Board","rows","row","cols","col","push","this","renderSquare","key","index","_this","src_Square","squares","winner","renderSquares","React","Component","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","xIsNext","played","stepNumber","slice","current","length","lines","i","_lines$i","slicedToArray","b","c","calculateWinner","setState","concat","step","move","Math","floor","_this2","moves","map","desc","buildLabelHistory","jumpTo","status","getGameState","src_Board","handleClick","ReactDOM","render","src_Game","document","getElementById"],"mappings":"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","file":"static/js/main.bc25b150.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props){\n  return (\n    <button className=\"square\" \n            onClick={props.onClick} \n            disabled={props.disabled}>\n      {props.value}\n    </button>\n  );\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nclass Board extends React.Component {\n  \n  renderSquares(){\n    let rows = [];\n    for(let row = 0; row < 3 ; row++){\n      let cols = [];\n      for(let col=0; col < 3; col++ ){\n        cols.push(this.renderSquare(col + (row * 3)));  \n      }\n      rows.push(<div key={row} className=\"board-row\">{cols}</div>);\n    }\n    return rows;\n  }\n\n  renderSquare(index) {\n    return (\n      <span key={index}>\n        <Square\n          value={this.props.squares[index]}\n          onClick={() => this.props.onClick(index)}\n          disabled={this.props.squares[index] || this.props.winner}  \n        />\n      </span>\n    );\n  }\n\n  render() {\n    return (\n      <div>{this.renderSquares()}</div>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board';\nimport {calculateWinner} from './Helper';\nimport './index.css';\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        xIsNext: true,\n        winner: null,\n        played: null,\n      }],\n      stepNumber:0,\n    };\n  }\n\n  handleClick(index){\n    const history = this.state.history.slice(0,this.state.stepNumber+1);\n    const lastIndex = history.length-1;\n    const current = history[lastIndex];\n    const squares = current.squares.slice();\n    squares[index] = current.xIsNext ? 'X' : 'O';\n    const winner = calculateWinner(squares);\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        xIsNext: !current.xIsNext,  \n        winner: winner,\n        played: index,\n      }]),\n      stepNumber: history.length,  \n    });\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n    });\n  }\n\n  getGameState(current,stepNumber){\n    if(current.winner) return 'Winner: '+ current.winner;\n    if(stepNumber === 9) return 'Draw!';\n    return 'Next player: '+ ( current.xIsNext ? 'X' : 'O');\n  }\n\n  buildLabelHistory(move, played){\n    if(!move) return 'Go to game start';\n    let row = Math.floor(played / 3)+1;\n    let col = (played % 3)+1;\n    return `Go to move # ${move} row: ${row} col: ${col}`;\n  }\n\n  render() {\n    const history = this.state.history;\n    const stepNumber = this.state.stepNumber;\n    const current = history[stepNumber];\n    const moves = history.map((step,move) => {\n      let desc = this.buildLabelHistory(move, step.played);\n      return (\n        <li key={move}>\n          <button \n              className={this.state.stepNumber === move ? 'bold' : ''}\n              onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    let status = this.getGameState(current,stepNumber);\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            squares={current.squares}\n            winner={current.winner}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;  ","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nReactDOM.render(  <Game />,document.getElementById('root') );"],"sourceRoot":""}